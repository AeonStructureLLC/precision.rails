
<ul id="CategoriesList">
  <%=  render :partial => 'categories/category_listing', :collection => categories, :locals => { :editable => editable } %>
</ul>

<div id="NewCategoryModal" class="aeon_modal hidden">
  <div id="NewCategory">
    <input type="text" id="NewCategoryTitle" placeholder="New Category"/>
    <div id="CreateNewCategoryButton">Create</div>
  </div>
</div>

<script type="text/javascript">
  function resetCategoryInteractions(){
    var root_categories = $("#CategoriesList");
    root_categories.children().tsort();

    var sub_categories_lists = $('.sub_categories_list');
    _.each(sub_categories_lists, function(sub_categories_list){
      var list = $(sub_categories_list);
      if(list.children().length > 0){
        list.removeClass('hidden');
        list.children().tsort();
      } else {
        list.addClass('hidden');
      }
    });

    $('.new_category_button').draggable({
      revert: true,
      revertDuration: 100,
      scope: 'categories_products',
      helper: function(event){
        var item_stub;
        $.ajax({
          url: "/category_stub",
          dataType: 'html',
          async: false,
          success: function(data){
            item_stub = $(data).addClass('stub');
          }
        });
        return item_stub;
      }
    });

    $("#CategoriesList").droppable({
      scope: 'unused',
      tolerance: "touch",
      addClasses: false,
      drop: function(event, ui){
        if(ui.helper.hasClass('stub') && ui.helper.hasClass('category_listing')){
          var url = "/categories/new"
          var params = {
            category: {
              title: "New Category"
            }
          }
          $.ajax({
            url: url,
            data: params,
            dataType: 'html',
            success: function(data){
              var ui = $(data);
              ui.attr('contenteditable', 'true');

              $("#CategoriesList").append(ui);
              resetCategoryInteractions();
            }
          });
        } else if(ui.helper.hasClass('category_listing')) {
          var clone = ui.draggable.clone().css({'top': 'auto', 'left': 'auto', 'z-index': 'auto'}).removeClass('small');
          var model_id = ui.draggable.attr('model_id');
          var model = ui.draggable.attr('model');
          var left_overs = $("[model='"+ model +"'][model_id='"+ model_id +"'][model_root='true']");
          _.each(left_overs, function(left_over){
            $(left_over).remove();
          });
          $("#CategoriesList").append(clone);
          resetCategoryInteractions();
          var url = "/set_containment_category.json";
          var params = {
            parent_id: '',
            child_id: model_id
          }
          $.ajax({
            url: url,
            data: params,
            dataType: 'json',
            success: function(data){
              console.log(data);
            }
          });
        }

      }
    });

    $('.category_listing').draggable({
      scope: 'categories_products',
      delay: 300,
      handle: ".drag_handle",
      revert: "invalid",
      revertDuration: 200,
      scroll: true,
      zIndex: 1000,
      cancel: '.title',
      start: function(event, ui){
        ui.helper.addClass('small');
      },
      stop: function(event, ui){
        ui.helper.removeClass('small');
      }
    });

    function add_new_category(){
      var title = $("#NewCategoryTitle").attr('value');

      var url = "/categories/new"
      var params = {
        category: {
          title: title
        }
      }
      $.ajax({
        url: url,
        data: params,
        dataType: 'html',
        success: function(data){
          var ui = $(data);
          ui.find('.title').attr('contenteditable', 'true');
          $("#CategoriesList").append(ui);
          resetCategoryInteractions();
          $("#AeonModalBlocker").click();
        }
      });
    }

    $(document).off('click', '.new_category_button');
    $(document).on('click', '.new_category_button', function(){
      $("#AeonModalBlocker").removeClass('hidden');
      $("#NewCategoryModal").removeClass('hidden');
      $("#NewCategoryModal").center();
      $("#NewCategoryTitle").attr('value', '');
      $("#NewCategoryTitle").focus();
    });

    $(document).off('click', '#CreateNewCategoryButton');
    $(document).on('click', '#CreateNewCategoryButton', function(){
      add_new_category();
    });

    $(document).off('keyup', '#NewCategoryTitle');
    $(document).on('keyup', '#NewCategoryTitle', function(event){
      var key = event.keyCode || event.which;
      if (key === 13) {
        add_new_category();
      }
      return false;
    });


    $('.delete_category_widget').draggable({
      scope: 'categories_products',
      delay: 300,
      revert: "invalid",
      revertDuration: 200,
      zIndex: 1000,
      helper: 'clone'
    });

    $('.category_listing').droppable({
      activeClass: 'can_drop',
      addClasses: true,
      greedy: true,
      hoverClass: 'can_drop_hover',
      tolerance: "pointer",
      scope: 'categories_products',
      drop: function(event, ui){
        console.log(ui.helper)
        var parent = $(event.target).closest('[model_root="true"]');
        var parent_id = parent.attr('model_id');
        var sub_categories_list = parent.find('.sub_categories_list:first');
        if(ui.helper.hasClass('stub') && ui.helper.hasClass('category_listing')){
          var url = "/categories/new"
          var params = {
            category: {
              parent_id: parent_id,
              title: "New Category"
            }
          }
          $.ajax({
            url: url,
            data: params,
            dataType: 'html',
            success: function(data){
              var ui = $(data);
              ui.find('.title').attr('contenteditable', 'true');

              sub_categories_list.append(ui);
              resetCategoryInteractions();
            }
          });
        } else if(ui.helper.hasClass('product_listing')){
          if(parent.hasClass('selected')){
            console.log('Same Category Move, so, doing nothing.');
          } else {
            var product_id = ui.helper.attr('model_id');
            var params = {
              product: {
                category_id: parent_id
              }
            }
            $.ajax({
              url: "/products/" + product_id + ".json",
              dataType: "json",
              type: "PUT",
              data: params,
              success: function(data){
                console.log("Product Moved to new category!");
                console.log(data);
                ui.draggable.remove();
              }
            });
          }

        } else if(ui.helper.hasClass('delete_category_widget')){
          var category_name = parent.find('.title:first').text();
          if( confirm("Deleting this category: ''" + category_name + "'' will remove ALL products associated with it.  Are you SURE you want to do this?")){
            var url = "/categories/" + parent_id + ".json";
            $.ajax({
              url: url,
              dataType: 'json',
              type: 'DELETE',
              success: function(data){
                console.log(data);
                parent.remove();
                resetCategoryInteractions();
              }
            });
          };
        } else {
          var clone = ui.draggable.clone().css({'top': 'auto', 'left': 'auto', 'z-index': 'auto'}).removeClass('small');
          var model_id = ui.draggable.attr('model_id');
          var model = ui.draggable.attr('model');
          var left_overs = $("[model='"+ model +"'][model_id='"+ model_id +"'][model_root='true']");
          _.each(left_overs, function(left_over){
            $(left_over).remove();
          });
          sub_categories_list.append(clone);
          resetCategoryInteractions();
          var url = "/set_containment_category.json";
          var params = {
            parent_id: parent_id,
            child_id: model_id
          }
          $.ajax({
            url: url,
            data: params,
            dataType: 'json',
            success: function(data){
              console.log(data);
            }
          });
        }
      }
    });
  }

  set_categories_navigation("on");

</script>
